import Link from "next/link";
import { useState, useEffect } from "react";
import { applyCreate } from "@/src/api";

const TabBar = ({ messages }) => {
  const [_, setApplyTypeRequest] = useState("");

  const onButtonClick = (applyType) => {
    applyCreate({ applyType, onSuccess: (data) => setApplyTypeRequest(data) });
  };

  useEffect(() => {
    const movingDiv = document.getElementsByClassName("moving-div")[0];

    // Function to reset animation
    function resetAnimation() {
      if (movingDiv) {
        movingDiv.style.animation = "none";
        void movingDiv.offsetWidth; /* Trigger reflow */
        movingDiv.style.animation = `shake 0.5s ease`;
      }
    }

    // Reset animation every 6 seconds
    const intervalId = setInterval(resetAnimation, 6000);

    // Clean up function
    return () => clearInterval(intervalId);
  }, []);

  return (
    <div className="overflow-hidden">
      <div className="flex flex-row justify-center gap-x-[20px] moving-div">
        <Link
          onClick={() => onButtonClick(8)}
          href="tel:+994703482606"
          className="flex flex-row items-center justify-center bg-[#FA2457] rounded-[57px] px-[15px] py-[7px] gap-x-[10px]"
        >
          <span className="text-[14px] leading-[15px] text-white">
            {messages["call-now"]}
          </span>
          <svg
            width="20"
            height="20"
            viewBox="0 0 72 72"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M38.9754 16.6138C43.075 17.3009 46.799 19.2372 49.772 22.2041C52.745 25.171 54.6696 28.8874 55.3738 32.9787M39.6014 3.2002C46.893 4.43381 53.5431 7.88479 58.8319 13.1472C64.1207 18.4251 67.5631 25.0617 68.7992 32.3384M63.1035 61.2892C63.1035 61.2892 59.1447 65.1774 58.1746 66.3173C56.5942 68.0038 54.7322 68.8002 52.2912 68.8002C52.0565 68.8002 51.8061 68.8002 51.5714 68.7846C46.9242 68.4879 42.6055 66.6765 39.3665 65.1306C30.5102 60.852 22.7334 54.7776 16.2711 47.0793C10.9354 40.6614 7.3678 34.7275 5.00506 28.3565C3.54986 24.4683 3.01785 21.4389 3.25256 18.5813C3.40903 16.7543 4.11316 15.2396 5.41189 13.9435L10.7476 8.61871C11.5143 7.9004 12.328 7.51002 13.126 7.51002C14.1118 7.51002 14.9098 8.1034 15.4105 8.60309C15.4262 8.61871 15.4418 8.63432 15.4574 8.64994C16.4119 9.54001 17.3195 10.4613 18.274 11.4451C18.759 11.9448 19.2597 12.4445 19.7605 12.9598L24.0322 17.2228C25.6908 18.878 25.6908 20.4083 24.0322 22.0635C23.5784 22.5163 23.1403 22.9692 22.6865 23.4064C21.3721 24.7493 22.4046 23.7189 21.0433 24.9369C21.012 24.9682 20.9807 24.9838 20.9651 25.015C19.6194 26.3579 19.8698 27.6696 20.1514 28.5597C20.1671 28.6065 20.1827 28.6534 20.1984 28.7002C21.3093 31.3861 22.8741 33.9157 25.2525 36.9295L25.2681 36.9451C29.5868 42.2543 34.1401 46.3924 39.1629 49.5623C39.8044 49.9683 40.4616 50.2962 41.0875 50.6085C41.6508 50.8896 42.1828 51.1551 42.6366 51.4361C42.6992 51.4674 42.7618 51.5142 42.8244 51.5454C43.3564 51.8109 43.8571 51.9358 44.3734 51.9358C45.6722 51.9358 46.4858 51.1238 46.7518 50.8584L49.8189 47.7976C50.3509 47.2666 51.1959 46.6264 52.1817 46.6264C53.1518 46.6264 53.9498 47.2354 54.4349 47.7663L63.0878 56.4016C64.6995 57.9944 63.1035 61.2892 63.1035 61.2892Z"
              stroke="white"
              strokeWidth="6"
              strokeLinecap="round"
              strokeLinejoin="round"
            />
          </svg>
        </Link>

        <Link
          onClick={() => onButtonClick(9)}
          href="https://wa.me/994703482606"
          className="flex flex-row items-center justify-center bg-[#25D366] rounded-[57px] px-[15px] py-[7px] gap-x-[10px]"
        >
          <span className="text-[14px] leading-[15px] text-white">
            {messages["write-to-us"]}
          </span>
          <svg
            width="21"
            height="20"
            viewBox="0 0 21 20"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M17.4188 2.91005C16.4974 1.98398 15.3999 1.24972 14.1903 0.750108C12.9807 0.250493 11.6832 -0.0044801 10.3736 5.95695e-05C4.88614 5.95695e-05 0.413776 4.45005 0.413776 9.91003C0.413776 11.66 0.876088 13.36 1.74041 14.86L0.333374 20L5.60976 18.62C7.06704 19.41 8.70523 19.83 10.3736 19.83C15.861 19.83 20.3334 15.38 20.3334 9.92003C20.3334 7.27004 19.2982 4.78005 17.4188 2.91005ZM10.3736 18.15C8.88614 18.15 7.42885 17.75 6.15247 17L5.85096 16.82L2.71528 17.64L3.54945 14.6L3.34845 14.29C2.52206 12.977 2.08326 11.4593 2.08212 9.91003C2.08212 5.37004 5.80071 1.67005 10.3635 1.67005C12.5746 1.67005 14.655 2.53005 16.2128 4.09005C16.9841 4.85401 17.5954 5.7627 18.0112 6.76346C18.4269 7.76422 18.6389 8.83714 18.6349 9.92003C18.655 14.46 14.9364 18.15 10.3736 18.15ZM14.9163 11.99C14.665 11.87 13.4389 11.27 13.2178 11.18C12.9866 11.1 12.8258 11.06 12.655 11.3C12.4841 11.55 12.0118 12.11 11.8711 12.27C11.7304 12.44 11.5796 12.46 11.3283 12.33C11.0771 12.21 10.2731 11.94 9.32835 11.1C8.58463 10.44 8.09217 9.63003 7.94141 9.38003C7.80071 9.13003 7.92131 9.00003 8.05197 8.87003C8.16252 8.76003 8.30322 8.58003 8.42383 8.44003C8.54443 8.30003 8.59468 8.19003 8.67508 8.03004C8.75548 7.86004 8.71528 7.72004 8.65498 7.60004C8.59468 7.48004 8.09217 6.26004 7.89116 5.76004C7.69016 5.28004 7.4791 5.34004 7.32835 5.33004H6.84594C6.67508 5.33004 6.41377 5.39004 6.18262 5.64004C5.96151 5.89004 5.3183 6.49004 5.3183 7.71004C5.3183 8.93003 6.21277 10.11 6.33337 10.27C6.45398 10.44 8.09217 12.94 10.5846 14.01C11.1776 14.27 11.6399 14.42 12.0017 14.53C12.5947 14.72 13.1374 14.69 13.5696 14.63C14.052 14.56 15.0469 14.03 15.2479 13.45C15.459 12.87 15.459 12.38 15.3886 12.27C15.3183 12.16 15.1675 12.11 14.9163 11.99Z"
              fill="white"
            />
          </svg>
        </Link>
      </div>
    </div>
  );
};

export default TabBar;
